import 'package:flutter/material.dart';
import '../../models/employee.dart';
import '../../services/employee_service.dart';

class EmployeeFormScreen extends StatefulWidget {
  final Employee? employee;

  const EmployeeFormScreen({Key? key, this.employee}) : super(key: key);

  @override
  _EmployeeFormScreenState createState() => _EmployeeFormScreenState();
}

class _EmployeeFormScreenState extends State<EmployeeFormScreen> {
  final _formKey = GlobalKey<FormState>();

  final _nameController = TextEditingController();
  final _positionController = TextEditingController();

  @override
  void initState() {
    super.initState();
    if (widget.employee != null) {
      _nameController.text = widget.employee!.fullName;
      _positionController.text = widget.employee!.position;
    }
  }

  void _submit() async {
    if (_formKey.currentState!.validate()) {
      final emp = Employee(
        id: widget.employee?.id ?? 0,
        fullName: _nameController.text,
        position: _positionController.text,
      );
      print('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ API: ${emp.toJson()}');
      try {
        if (widget.employee == null) {
          final newEmployee = await EmployeeService.addEmployee(emp);
          Navigator.pop(context, newEmployee); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
        } else {
          // –ï—Å–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç—Å—è, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ
          await EmployeeService.updateEmployee(emp);
          Navigator.pop(context, true); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–ª–∞–≥ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        }
      } catch (e) {
        ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('–û—à–∏–±–∫–∞: $e')));
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    final isEditing = widget.employee != null;
    return Scaffold(
      appBar: AppBar(
        title: Text(isEditing ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞' : '–î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞'),
      ),
      body: Padding(
        padding: EdgeInsets.all(16),
        child: Form(
          key: _formKey,
          child: ListView(
            children: [
              TextFormField(
                controller: _nameController,
                decoration: InputDecoration(labelText: '–§–ò–û'),
                validator: (v) => v == null || v.isEmpty ? '–í–≤–µ–¥–∏—Ç–µ –∏–º—è' : null,
              ),
              SizedBox(height: 16),
              TextFormField(
                controller: _positionController,
                decoration: InputDecoration(labelText: '–î–æ–ª–∂–Ω–æ—Å—Ç—å'),
                validator: (v) => v == null || v.isEmpty ? '–í–≤–µ–¥–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å' : null,
              ),
              SizedBox(height: 32),
              ElevatedButton(
                onPressed: _submit,
                child: Text(isEditing ? '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å' : '–î–æ–±–∞–≤–∏—Ç—å'),
              )
            ],
          ),
        ),
      ),
    );
  }
}
